jQuery.extend(true,langJSON, {
  "de" : {
    "condSwitchTransmitterWindSpeedFilterSelect" : "Berechnung der Windst&auml;rke",
    "optionSwitchTransmitterWindSpeedFilterSelectCurrentValue" : "Momentaner Wert",
    "optionSwitchTransmitterWindSpeedFilterSelectMinValue" : "Minimaler Wert",
    "optionSwitchTransmitterWindSpeedFilterSelectMaxValue" : "Maximaler Wert",
    "optionSwitchTransmitterWindSpeedFilterSelectAverageValue" : "Durchschnittswert",
    "condSwitchTransmitterWindSpeedChannelOperationMode" : "Modus",
    "condSwitchTransmitterWindSpeedChannelOperationModeWindGustDirect" : "Direkte Windmessung",
    "condSwitchTransmitterWindSpeedChannelOperationModeWindGustForecast" : "Vorhersage der Windst&auml;rke",
    "condTxDecisionWindAbove" : "Gesendeter Entscheidungswert, wenn obere Windst&auml;rke &uuml;berschritten",
    "condTxDecisionWindBelow" : "Gesendeter Entscheidungswert, wenn untere Windst&auml;rke unterschritten<br/>(Nur, wenn vorher obere Windst&auml;rke &uuml;berschritten wurde)",
    "condThresholdWindHi" : "Obere Windst&auml;rke",
    "condThresholdWindLo" : "Untere Windst&auml;rke",
    "condTxDecisionTempAbove" : "Gesendeter Entscheidungswert, wenn obere Temperaturschwelle &uuml;berschritten",
    "condTxDecisionTempBelow" : "Gesendeter Entscheidungswert, wenn untere Temperaturschwelle unterschritten<br/>(Nur, wenn vorher obere Temperaturschwelle &uuml;berschritten wurde)",
    "condThresholdTempHi" : "Obere Temperaturschwelle",
    "condThresholdTempLo" : "Untere Temperaturschwelle",
    "condTxDecisionHumidityAbove" : "Gesendeter Entscheidungswert, wenn obere Feuchtigkeitsschwelle &uuml;berschritten",
    "condTxDecisionHumidityBelow" : "Gesendeter Entscheidungswert, wenn untere Feuchtigkeitsschwelle unterschritten<br/>(Nur, wenn vorher obere Feuchtigkeitsschwelle &uuml;berschritten wurde)",
    "condThresholdHumidityHi" : "Obere Feuchtigkeitsschwelle",
    "condThresholdHumidityLo" : "Untere Feuchtigkeitsschwelle",
    "condTxDecisionWindDirectionAbove" : "Gesendeter Entscheidungswert, wenn oberer Wert der Windrichtung erreicht",
    "condTxDecisionWindDirectionBelow" : "Gesendeter Entscheidungswert, wenn unterer Wert der Windrichtung erreicht",
    "condThresholdWindDirectionHi" : "Oberer Wert der Windrichtung",
    "condThresholdWindDirectionLo" : "Unterer Wert der Windrichtung",
    "condTxDecisionBrightnessAbove" : "Gesendeter Entscheidungswert, wenn obere Helligkeitsschwelle &uuml;berschritten",
    "condTxDecisionBrightnessBelow" : "Gesendeter Entscheidungswert, wenn untere Helligkeitsschwelle unterschritten<br/>(Nur, wenn vorher obere Helligkeitsschwelle &uuml;berschritten wurde)",
    "condThresholdBrightnessHi" : "Obere Helligkeitsschwelle",
    "condThresholdBrightnessLo" : "Untere Helligkeitsschwelle",
    "brightnessThresholdEXP" : "Wert des Exponenten",
    "brightnessThresholdVAL" : "Gemeldeter Wert des Helligkeitssensors",
    "sunshineThreshold" : "Helligkeitsschwelle, ab dem Sonnenschein signalisiert wird",
    "calculation" : "Berechnung: ",
    "condTxDecisionRainQuantityAbove" : "Gesendeter Entscheidungswert, wenn Regenmenge &uuml;berschritten",
    "condThresholdRainQuantity" : "Regenmenge, ab dem der Entscheidungswert gesendet wird.",
    "eventTimeoutRainCounter" : "Zeit, in der die gew&auml;hlte Regenmenge fallen muss,<br/>damit der Entscheidungswert gesendet wird.",
    "eventTimeoutBaseRainCounter" : "Einheit",
    "eventTimeoutValueRainCounter" : "Wert",
    "eventTimeoutRainDrop" : "Zeit ohne Regen, nach der Trockenheit gemeldet wird.",
    "eventTimeoutBaseRainDrop" : "Einheit",
    "eventTimeoutValueRainDrop" : "Wert"
  },

  "en" : {
    "condSwitchTransmitterWindSpeedFilterSelect" : "Calculation of wind velocity",
    "optionSwitchTransmitterWindSpeedFilterSelectCurrentValue" : "Current value",
    "optionSwitchTransmitterWindSpeedFilterSelectMinValue" : "Minimum value",
    "optionSwitchTransmitterWindSpeedFilterSelectMaxValue" : "Minimum value",
    "optionSwitchTransmitterWindSpeedFilterSelectAverageValue" : "Average value",
    "condSwitchTransmitterWindSpeedChannelOperationMode" : "Mode",
    "condSwitchTransmitterWindSpeedChannelOperationModeWindGustDirect" : "Direct wind measuring",
    "condSwitchTransmitterWindSpeedChannelOperationModeWindGustForecast" : "Wind velocity forecast",
    "condTxDecisionWindAbove" : "Decision value sent if upper wind velocity is exceeded",
    "condTxDecisionWindBelow" : "Decision value sent if lower wind velocity falls below threshold<br/>(only, if upper wind velocity has been exceeded previously)",
    "condThresholdWindHi" : "Upper wind velocity",
    "condThresholdWindLo" : "Lower wind velocity",
    "condTxDecisionTempAbove" : "Decision value sent if upper temperature threshold is exceeded",
    "condTxDecisionTempBelow" : "Decision value sent if lower temperature value falls below threshold<br/>(only, if upper temperature threshold has been exceeded previously)",
    "condThresholdTempHi" : "Upper temperature threshold",
    "condThresholdTempLo" : "Lower temperature threshold",
    "condTxDecisionHumidityAbove" : "Decision value sent if upper humidity threshold is exceeded",
    "condTxDecisionHumidityBelow" : "Decision value sent if lower humidity value falls below threshold<br/>(only, if upper humidity threshold has been exceeded previously)",
    "condThresholdHumidityHi" : "Upper humidity threshold",
    "condThresholdHumidityLo" : "Lower humidity threshold",
    "condTxDecisionWindDirectionAbove" : "Decision value sent if upper value of the wind direction is reached",
    "condTxDecisionWindDirectionBelow" : "Decision value sent if lower value of the wind direction is reached",
    "condThresholdWindDirectionHi" : "Upper value of wind direction",
    "condThresholdWindDirectionLo" : "Lower value of wind direction",
    "condTxDecisionBrightnessAbove" : "Decision value sent if upper brightness threshold is exceeded",
    "condTxDecisionBrightnessBelow" : "Decision value sent if lower brightness value falls below threshold<br/>(only, if upper brightness threshold has been exceeded previously)",
    "condThresholdBrightnessHi" : "Upper brightness threshold",
    "condThresholdBrightnessLo" : "Lower brightness threshold",
    "brightnessThresholdEXP" : "Value of exponent",
    "brightnessThresholdVAL" : "Registered value of brightness sensor",
    "sunshineThreshold" : "Brightness threshold at which the sunshine duration is signalled",
    "calculation" : "Calculation: ",
    "condTxDecisionRainQuantityAbove" : "Decision value sent if rainfall volume is exceeded",
    "condThresholdRainQuantity" : "Rainfall volume at which the decision value is sent.",
    "eventTimeoutRainCounter" : "Time during which the rainfall volume has to be reached,<br/>before sending the decision value.",
    "eventTimeoutBaseRainCounter" : "Unit",
    "eventTimeoutValueRainCounter" : "Value",
    "eventTimeoutRainDrop" : "Time without rain after which draught is reported.",
    "eventTimeoutBaseRainDrop" : "Unit",
    "eventTimeoutValueRainDrop" : "Value"
  },

  "tr" : {
    "condSwitchTransmitterWindSpeedFilterSelect" : "Calculation of wind velocity",
    "optionSwitchTransmitterWindSpeedFilterSelectCurrentValue" : "Current value",
    "optionSwitchTransmitterWindSpeedFilterSelectMinValue" : "Minimum value",
    "optionSwitchTransmitterWindSpeedFilterSelectMaxValue" : "Minimum value",
    "optionSwitchTransmitterWindSpeedFilterSelectAverageValue" : "Average value",
    "condSwitchTransmitterWindSpeedChannelOperationMode" : "Mode",
    "condSwitchTransmitterWindSpeedChannelOperationModeWindGustDirect" : "Direct wind measuring",
    "condSwitchTransmitterWindSpeedChannelOperationModeWindGustForecast" : "Wind velocity forecast",
    "condTxDecisionWindAbove" : "Decision value sent if upper wind velocity is exceeded",
    "condTxDecisionWindBelow" : "Decision value sent if lower wind velocity falls below threshold<br/>(only, if upper wind velocity has been exceeded previously)",
    "condThresholdWindHi" : "Upper wind velocity",
    "condThresholdWindLo" : "Lower wind velocity",
    "condTxDecisionTempAbove" : "Decision value sent if upper temperature threshold is exceeded",
    "condTxDecisionTempBelow" : "Decision value sent if lower temperature value falls below threshold<br/>(only, if upper temperature threshold has been exceeded previously)",
    "condThresholdTempHi" : "Upper temperature threshold",
    "condThresholdTempLo" : "Lower temperature threshold",
    "condTxDecisionHumidityAbove" : "Decision value sent if upper humidity threshold is exceeded",
    "condTxDecisionHumidityBelow" : "Decision value sent if lower humidity value falls below threshold<br/>(only, if upper humidity threshold has been exceeded previously)",
    "condThresholdHumidityHi" : "Upper humidity threshold",
    "condThresholdHumidityLo" : "Lower humidity threshold",
    "condTxDecisionWindDirectionAbove" : "Decision value sent if upper value of the wind direction is reached",
    "condTxDecisionWindDirectionBelow" : "Decision value sent if lower value of the wind direction is reached",
    "condThresholdWindDirectionHi" : "Upper value of wind direction",
    "condThresholdWindDirectionLo" : "Lower value of wind direction",
    "condTxDecisionBrightnessAbove" : "Decision value sent if upper brightness threshold is exceeded",
    "condTxDecisionBrightnessBelow" : "Decision value sent if lower brightness value falls below threshold<br/>(only, if upper brightness threshold has been exceeded previously)",
    "condThresholdBrightnessHi" : "Upper brightness threshold",
    "condThresholdBrightnessLo" : "Lower brightness threshold",
    "brightnessThresholdEXP" : "Value of exponent",
    "brightnessThresholdVAL" : "Registered value of brightness sensor",
    "sunshineThreshold" : "Brightness threshold at which the sunshine duration is signalled",
    "calculation" : "Calculation: ",
    "condTxDecisionRainQuantityAbove" : "Decision value sent if rainfall volume is exceeded",
    "condThresholdRainQuantity" : "Rainfall volume at which the decision value is sent.",
    "eventTimeoutRainCounter" : "Time during which the rainfall volume has to be reached,<br/>before sending the decision value.",
    "eventTimeoutBaseRainCounter" : "Unit",
    "eventTimeoutValueRainCounter" : "Value",
    "eventTimeoutRainDrop" : "Time without rain after which draught is reported.",
    "eventTimeoutBaseRainDrop" : "Unit",
    "eventTimeoutValueRainDrop" : "Value"
  }
});